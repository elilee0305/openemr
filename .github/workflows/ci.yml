name: OpenEMR CI Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: openemr_test
          MYSQL_ROOT_HOST: '%'
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    strategy:
      matrix:
        php: ['8.3', '8.2']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, curl, xml, json, mysqli
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Wait for MySQL service to be ready
        run: |
          echo "Waiting for MySQL service at host 'mysql'..."
          for i in {1..30}; do
            if mysqladmin ping -hmysql -uroot -proot &> /dev/null; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting 1s..."
            sleep 1
          done

      - name: Debug MySQL connectivity
        run: |
          echo "Checking MySQL environment variables..."
          env | grep MYSQL
          echo "Trying mysqladmin ping:"
          mysqladmin ping -hmysql -uroot -proot || echo "mysqladmin cannot reach 'mysql'. Check service name and port."
          echo "Service container should be up and healthy."
          docker ps || echo "Docker not available in this runner."

      - name: Create MySQL test database and disable strict mode
        run: |
          mysql -hmysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS openemr_test;"
          mysql -hmysql -uroot -proot -e "SET GLOBAL sql_mode='NO_ENGINE_SUBSTITUTION';"

      - name: Import OpenEMR test database
        run: |
          if [ -f sql/database.sql ]; then
            mysql -hmysql -uroot -proot openemr_test < sql/database.sql
          else
            echo "sql/database.sql not found. Skipping import."
          fi
        continue-on-error: true

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml

      - name: Run PHP Code Sniffer
        run: vendor/bin/phpcs --standard=PSR12 controllers library
