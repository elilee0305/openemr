name: OpenEMR CI Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: openemr_test
          MYSQL_ROOT_HOST: '%'
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    strategy:
      matrix:
        php: ['8.3', '8.2']
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mbstring, intl, curl, xml, json, mysqli
          ini-values: post_max_size=256M, upload_max_filesize=256M

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Set MySQL environment variables
        run: |
          echo "MYSQL_HOST=mysql" >> $GITHUB_ENV
          echo "MYSQL_PORT=3306" >> $GITHUB_ENV
          echo "MYSQL_ROOT_PASSWORD=root" >> $GITHUB_ENV
          echo "MYSQL_DATABASE=openemr_test" >> $GITHUB_ENV

      - name: Wait for MySQL service to be ready
        run: |
          echo "Waiting for MySQL service..."
          for i in {1..30}; do
            if mysql -h $MYSQL_HOST -P $MYSQL_PORT -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1;" &> /dev/null; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting 2s..."
            sleep 2
          done

      - name: Debug MySQL host connectivity
        run: |
          echo "Environment variables:"
          env | grep MYSQL
          echo "Listing Docker containers (service containers in runner):"
          docker ps || echo "Docker not available in this runner"
          echo "Attempt test connection:"
          mysql -h $MYSQL_HOST -P $MYSQL_PORT -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT VERSION();" || echo "Connection failed!"

      - name: Create MySQL test database and disable strict mode
        run: |
          mysql -h $MYSQL_HOST -P $MYSQL_PORT -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;"
          mysql -h $MYSQL_HOST -P $MYSQL_PORT -uroot -p$MYSQL_ROOT_PASSWORD -e "SET GLOBAL sql_mode='NO_ENGINE_SUBSTITUTION';"

      - name: Import OpenEMR test database
        run: |
          if [ -f sql/database.sql ]; then
            mysql -h $MYSQL_HOST -P $MYSQL_PORT -uroot -p$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE < sql/database.sql
          else
            echo "sql/database.sql not found. Skipping import."
          fi
        continue-on-error: true

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml

      - name: Run PHP Code Sniffer
        run: vendor/bin/phpcs --standard=PSR12 controllers library
